#!/usr/bin/env lua

local sutils = require "scripts.utils"
local Migrations = require "scripts.migrations"

local function print_usage()
  print("Usage:")
  print("  create   --conf=[conf] --name=[name] # Create a migration file for configured DAOs")
  print("  migrate  --conf=[conf]               # Migrate to the latest migration available")
  print("  rollback --conf=[conf]               # Rollback the latest executed migration")
  print("  reset    --conf=[conf]               # Rollback all migrations")
  os.exit(1)
end

-- Command
local command = arg[1]

-- Arguments
local opts = {}
opts.name = sutils.getopt(arg, "name").name
opts.conf = sutils.getopt(arg, "conf").conf
if not opts.conf then
  print_usage()
end

-- Load configuration
local configuration, dao_properties = sutils.load_configuration(opts.conf)
local migrations = Migrations(configuration, dao_properties)

if command == "create" then
  if not opts.name then
    print_usage()
  end

  migrations:create(opts.name, function(interface, file_path, file_name)
    os.execute("mkdir -p "..file_path)
    sutils.write_to_file(file_path.."/"..file_name..".lua", interface)
  end)
elseif command == "migrate" then
  migrations:migrate(function(migration)
    print(sutils.green("✔").." Migrated up to: "..sutils.yellow(migration.name))
  end)
elseif command == "rollback" then
  migrations:rollback(function(migration)
    print(sutils.green("✔").." Rollbacked to: "..sutils.yellow(migration.name))
  end)
elseif command == "reset" then
  migrations:reset(function(migration)
    print(sutils.green("✔").." Rollbacked: "..sutils.yellow(migration.name))
  end)
else
  print_usage()
end
